[
    {
        "id": "ba9a5610261fc974",
        "type": "tab",
        "label": "ISS Position",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "15a636cf1612cd8d",
        "type": "tab",
        "label": "SMT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4e6a1216e02af12",
        "type": "tab",
        "label": "send Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9e4c5736fa0e307f",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "ab46aa8e6727d4f1",
        "type": "subflow",
        "name": "Subflow 2",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "6d9e5abfc08c0e38"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "99857b73c540be41",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "bdd44b906bd11744"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "2217ef89b4fe6c38",
        "type": "subflow",
        "name": "Subflow 4",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "58b72339fcbcac61"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "db983d654c687c73",
        "type": "subflow",
        "name": "Subflow 5",
        "info": "",
        "in": [
            {
                "x": 60,
                "y": 200,
                "wires": [
                    {
                        "id": "5888d0bdd2ec9259"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "998e2c6eb4cd0d6a",
        "type": "mqtt-broker",
        "name": "TB",
        "broker": "thingsboard",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "b28a7f7f415e991f",
        "type": "modbus-client",
        "name": "SC",
        "clienttype": "tcp",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "host.docker.internal",
        "tcpPort": "13001",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": 9600,
        "serialDatabits": 8,
        "serialStopbits": 1,
        "serialParity": "none",
        "serialConnectionDelay": 100,
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": true,
        "showErrors": false,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "f774ae96f1a20f59",
        "type": "inject",
        "z": "ab46aa8e6727d4f1",
        "name": "Turn On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "38f40a6f493fac18"
            ]
        ]
    },
    {
        "id": "38f40a6f493fac18",
        "type": "function",
        "z": "ab46aa8e6727d4f1",
        "name": "To int32",
        "func": "let value = msg.payload;\n\nif (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n}\n\nlet high = (value >> 16) & 0xFFFF;\nlet low  = value & 0xFFFF;\n\nmsg.payload = {\n    value: [high, low],\n};\n\nnode.status({fill:\"green\", shape:\"dot\", text: `écrit: ${msg.payload.value[0].toString(16)} ${msg.payload.value[1].toString(16)}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 146.66666666666674,
        "wires": [
            [
                "b714599ef421e375"
            ]
        ]
    },
    {
        "id": "b714599ef421e375",
        "type": "modbus-write",
        "z": "ab46aa8e6727d4f1",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0xd002",
        "quantity": "2",
        "server": "b28a7f7f415e991f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 600,
        "y": 113.33333333333337,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6d9e5abfc08c0e38",
        "type": "function",
        "z": "ab46aa8e6727d4f1",
        "name": "start",
        "func": "if (msg.payload.start === true) {\n    msg.payload = 4;\n    return msg;\n} else {\n    return null; \n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": [
            [
                "38f40a6f493fac18"
            ]
        ]
    },
    {
        "id": "bdd44b906bd11744",
        "type": "debug",
        "z": "99857b73c540be41",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 180,
        "wires": []
    },
    {
        "id": "f3f30ff6ec6acbd2",
        "type": "function",
        "z": "2217ef89b4fe6c38",
        "name": "To int32",
        "func": "let value = msg.payload;\n\nif (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n}\n\nlet high = (value >> 16) & 0xFFFF;\nlet low  = value & 0xFFFF;\n\nmsg.payload = {\n    value: [high, low],\n};\n\nnode.status({fill:\"green\", shape:\"dot\", text: `écrit: ${msg.payload.value[0].toString(16)} ${msg.payload.value[1].toString(16)}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "b764c0ef4abf1ce6"
            ]
        ]
    },
    {
        "id": "b764c0ef4abf1ce6",
        "type": "modbus-write",
        "z": "2217ef89b4fe6c38",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0xd000",
        "quantity": "2",
        "server": "b28a7f7f415e991f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 620,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "58b72339fcbcac61",
        "type": "function",
        "z": "2217ef89b4fe6c38",
        "name": "Write watchdog",
        "func": "if (msg.payload.watchdog === true && !context.get('running')) {\n    context.set('running', true);\n    let count = 0;\n\n    const interval = setInterval(() => {\n        node.send({ payload: count });\n\n        count += 1;\n        if (count > 10) {\n            count = 0 ;\n        }\n    }, 1000); \n}\n\nreturn null; \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 80,
        "wires": [
            [
                "f3f30ff6ec6acbd2"
            ]
        ]
    },
    {
        "id": "21305ba7e138a077",
        "type": "inject",
        "z": "db983d654c687c73",
        "name": "Clear fault",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0xFF",
        "payloadType": "num",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "b23282e76763e860"
            ]
        ]
    },
    {
        "id": "b23282e76763e860",
        "type": "function",
        "z": "db983d654c687c73",
        "name": "To int32",
        "func": "let value = msg.payload;\n\nif (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n}\n\nlet high = (value >> 16) & 0xFFFF;\nlet low  = value & 0xFFFF;\n\nmsg.payload = {\n    value: [high, low],\n};\n\nnode.status({fill:\"green\", shape:\"dot\", text: `écrit: ${msg.payload.value[0].toString(16)} ${msg.payload.value[1].toString(16)}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "6dfdffa1a39a985e"
            ]
        ]
    },
    {
        "id": "6dfdffa1a39a985e",
        "type": "modbus-write",
        "z": "db983d654c687c73",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0xd00a",
        "quantity": "2",
        "server": "b28a7f7f415e991f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 660,
        "y": 80,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5888d0bdd2ec9259",
        "type": "function",
        "z": "db983d654c687c73",
        "name": "Clear Faults",
        "func": "if (msg.payload.clearFaults === true ) {\n    msg.payload = 0xFF;\n}\n\nreturn msg; \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 200,
        "wires": [
            [
                "b23282e76763e860"
            ]
        ]
    },
    {
        "id": "9669f37adaa9a219",
        "type": "http request",
        "z": "ba9a5610261fc974",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://api.open-notify.org/iss-now.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 340,
        "wires": [
            [
                "e5024bc2a2b2c1da"
            ]
        ]
    },
    {
        "id": "1ea845cf198f10f5",
        "type": "inject",
        "z": "ba9a5610261fc974",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "9669f37adaa9a219"
            ]
        ]
    },
    {
        "id": "e5024bc2a2b2c1da",
        "type": "function",
        "z": "ba9a5610261fc974",
        "name": "take lat & long response",
        "func": "// Parse manuellement la réponse\nlet data = JSON.parse(msg.payload);\nmsg.payload = data.iss_position;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 340,
        "wires": [
            [
                "cf5b7e63c4a2c8f4"
            ]
        ]
    },
    {
        "id": "cf5b7e63c4a2c8f4",
        "type": "mqtt out",
        "z": "ba9a5610261fc974",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "998e2c6eb4cd0d6a",
        "x": 870,
        "y": 340,
        "wires": []
    },
    {
        "id": "a1f472ec2f5e4e8b",
        "type": "inject",
        "z": "15a636cf1612cd8d",
        "name": "Write Watchdog",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1530,
        "y": 1360,
        "wires": [
            [
                "ec5f503a7fb66290"
            ]
        ]
    },
    {
        "id": "ec5f503a7fb66290",
        "type": "function",
        "z": "15a636cf1612cd8d",
        "name": "watchdog",
        "func": "let count = flow.get(\"myCounter\") || 0;\n\ncount += 1;\n\nif (count > 10) {\n    count = 0;\n}\n\nflow.set(\"myCounter\", count);\n\n\n\n\nmsg.payload = count;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1760,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "c969ba33305ad0c8",
        "type": "function",
        "z": "15a636cf1612cd8d",
        "name": "To int32",
        "func": "let value = msg.payload;\n\nif (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n}\n\nlet high = (value >> 16) & 0xFFFF;\nlet low  = value & 0xFFFF;\n\nmsg.payload = {\n    value: [high, low],\n};\n\nnode.status({fill:\"green\", shape:\"dot\", text: `écrit: ${msg.payload.value[0].toString(16)} ${msg.payload.value[1].toString(16)}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 980,
        "wires": [
            [
                "4d6c1bbed9b3a0ac"
            ]
        ]
    },
    {
        "id": "494b6565795e6a4b",
        "type": "inject",
        "z": "15a636cf1612cd8d",
        "name": "Set Active Power",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-500000",
        "payloadType": "num",
        "x": 420,
        "y": 980,
        "wires": [
            [
                "c969ba33305ad0c8"
            ]
        ]
    },
    {
        "id": "4d6c1bbed9b3a0ac",
        "type": "modbus-write",
        "z": "15a636cf1612cd8d",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0xd004",
        "quantity": "2",
        "server": "b28a7f7f415e991f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 900,
        "y": 960,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "afcc7e7088754dcf",
        "type": "function",
        "z": "15a636cf1612cd8d",
        "name": "To int32",
        "func": "let value = msg.payload;\n\nif (value < 0) {\n    value = 0xFFFFFFFF + value + 1;\n}\n\nlet high = (value >> 16) & 0xFFFF;\nlet low  = value & 0xFFFF;\n\nmsg.payload = {\n    value: [high, low],\n};\n\nnode.status({fill:\"green\", shape:\"dot\", text: `écrit: ${msg.payload.value[0].toString(16)} ${msg.payload.value[1].toString(16)}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1180,
        "wires": [
            [
                "bbbafe431f592ab4"
            ]
        ]
    },
    {
        "id": "44b2d531a237cd82",
        "type": "inject",
        "z": "15a636cf1612cd8d",
        "name": "Set Reactive Power",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10000",
        "payloadType": "num",
        "x": 410,
        "y": 1180,
        "wires": [
            [
                "afcc7e7088754dcf"
            ]
        ]
    },
    {
        "id": "bbbafe431f592ab4",
        "type": "modbus-write",
        "z": "15a636cf1612cd8d",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "",
        "dataType": "MHoldingRegisters",
        "adr": "0xd006",
        "quantity": "2",
        "server": "b28a7f7f415e991f",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 900,
        "y": 1180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "2986375884735d2b",
        "type": "mqtt in",
        "z": "15a636cf1612cd8d",
        "name": "",
        "topic": "v1/devices/me/attributes",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "998e2c6eb4cd0d6a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 1080,
        "wires": [
            [
                "dbef6a22c83fb133"
            ]
        ]
    },
    {
        "id": "dbef6a22c83fb133",
        "type": "function",
        "z": "15a636cf1612cd8d",
        "name": "setP",
        "func": "msg.payload = msg.payload.setP;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1080,
        "wires": [
            [
                "c969ba33305ad0c8"
            ]
        ]
    },
    {
        "id": "6e99bcfe2489a55e",
        "type": "mqtt in",
        "z": "15a636cf1612cd8d",
        "name": "",
        "topic": "v1/devices/me/attributes",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "998e2c6eb4cd0d6a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "d824c22c858057a2"
            ]
        ]
    },
    {
        "id": "d824c22c858057a2",
        "type": "function",
        "z": "15a636cf1612cd8d",
        "name": "setQ",
        "func": "msg.payload = msg.payload.setQ;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 1280,
        "wires": [
            [
                "afcc7e7088754dcf"
            ]
        ]
    },
    {
        "id": "8937403b9838af4d",
        "type": "mqtt in",
        "z": "15a636cf1612cd8d",
        "name": "",
        "topic": "v1/devices/me/attributes",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "998e2c6eb4cd0d6a",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 400,
        "wires": [
            [
                "da0ee8d974197809",
                "6fa9912f9715a7a4",
                "c4e193098ddac410",
                "fe2726f66ab6dc9e",
                "2f224872f74aa7cd",
                "4048123e25f522e3"
            ]
        ]
    },
    {
        "id": "fe2726f66ab6dc9e",
        "type": "subflow:ab46aa8e6727d4f1",
        "z": "15a636cf1612cd8d",
        "name": "Start",
        "x": 550,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4e193098ddac410",
        "type": "subflow:99857b73c540be41",
        "z": "15a636cf1612cd8d",
        "name": "Stop",
        "x": 550,
        "y": 580,
        "wires": []
    },
    {
        "id": "da0ee8d974197809",
        "type": "subflow:2217ef89b4fe6c38",
        "z": "15a636cf1612cd8d",
        "name": "watchdog",
        "x": 560,
        "y": 360,
        "wires": []
    },
    {
        "id": "6fa9912f9715a7a4",
        "type": "subflow:db983d654c687c73",
        "z": "15a636cf1612cd8d",
        "name": "ClearFaults",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "2f224872f74aa7cd",
        "type": "subflow:99857b73c540be41",
        "z": "15a636cf1612cd8d",
        "name": "Test Json",
        "x": 560,
        "y": 660,
        "wires": []
    },
    {
        "id": "4048123e25f522e3",
        "type": "debug",
        "z": "15a636cf1612cd8d",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 760,
        "wires": []
    },
    {
        "id": "68cf62b577ad94ce",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 120,
        "wires": [
            [
                "61435662c3648d92"
            ]
        ]
    },
    {
        "id": "7d830c6c4ab6ccdd",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\n\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 220,
        "wires": [
            [
                "a24eaefe99e795c5"
            ]
        ]
    },
    {
        "id": "56f9bab699d15604",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\n\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 360,
        "wires": [
            [
                "e498168e0c7e890c"
            ]
        ]
    },
    {
        "id": "91c7f9712c0f1732",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\n\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 460,
        "wires": [
            [
                "497d9d0138854115"
            ]
        ]
    },
    {
        "id": "c4d31c68738eb4ed",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "SC State",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0x2502",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 200,
        "y": 120,
        "wires": [
            [
                "68cf62b577ad94ce"
            ],
            []
        ]
    },
    {
        "id": "884f9258bfd8d2d9",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "Online racks",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0x2500",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "7d830c6c4ab6ccdd"
            ],
            []
        ]
    },
    {
        "id": "1fd2b8be573c530a",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "SOC",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0x2504",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 360,
        "wires": [
            [
                "56f9bab699d15604"
            ],
            []
        ]
    },
    {
        "id": "409275dda92ce047",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "Active Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0x2418",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 500,
        "wires": [
            [
                "91c7f9712c0f1732"
            ],
            []
        ]
    },
    {
        "id": "61435662c3648d92",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "state",
        "func": "msg.topic = \"state\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 120,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "a24eaefe99e795c5",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "online racks",
        "func": "msg.topic = \"online racks\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "e498168e0c7e890c",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "soc",
        "func": "msg.topic = \"soc\";\nmsg.payload = msg.payload / 100;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 360,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "497d9d0138854115",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "P",
        "func": "msg.topic = \"P\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "7e0b3073e1dd0ec4",
        "type": "join",
        "z": "a4e6a1216e02af12",
        "name": "Join",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "0.5",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 910,
        "y": 280,
        "wires": [
            [
                "051244619773b030"
            ]
        ]
    },
    {
        "id": "10751a44e1b74a24",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\n\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 560,
        "wires": [
            [
                "ef132ce3443de0b2"
            ]
        ]
    },
    {
        "id": "6bfe7e17b8891b73",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "Reactive Power",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0x241a",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 180,
        "y": 600,
        "wires": [
            [
                "10751a44e1b74a24"
            ],
            []
        ]
    },
    {
        "id": "ef132ce3443de0b2",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "Q",
        "func": "msg.topic = \"Q\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "bb1f4d666d2eb8d7",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "uint32",
        "func": "msg.payload = (msg.payload[0] << 16) | msg.payload[1];\n\nnode.status({fill:\"green\", shape:\"dot\", text: `val: ${msg.payload}`});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 680,
        "wires": [
            [
                "44be3e5ed2f43afc"
            ]
        ]
    },
    {
        "id": "7792cdf2eddde8ac",
        "type": "modbus-read",
        "z": "a4e6a1216e02af12",
        "name": "watchdog",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": true,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "HoldingRegister",
        "adr": "0xd000",
        "quantity": "2",
        "rate": "1",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "b28a7f7f415e991f",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 160,
        "y": 720,
        "wires": [
            [
                "bb1f4d666d2eb8d7"
            ],
            []
        ]
    },
    {
        "id": "44be3e5ed2f43afc",
        "type": "function",
        "z": "a4e6a1216e02af12",
        "name": "Watchdog",
        "func": "msg.topic = \"Watchdog\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 680,
        "wires": [
            [
                "7e0b3073e1dd0ec4"
            ]
        ]
    },
    {
        "id": "051244619773b030",
        "type": "mqtt out",
        "z": "a4e6a1216e02af12",
        "name": "",
        "topic": "v1/devices/me/telemetry",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "998e2c6eb4cd0d6a",
        "x": 1170,
        "y": 280,
        "wires": []
    }
]